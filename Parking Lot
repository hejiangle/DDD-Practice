@startuml

class ParkingLot <<Entity>> {
    string address
    bool isAvailable

    Ticket ReceiveCar(Car car)
    Car GetCar(Ticket ticket)
    
}

class Car <<ValueObject>> {
    string plateNumber
}

class Ticket <<ValueObject>> {
    string plateNumber
    string parkingLotAddress
    
    bool IsValidTicket(ParkingLot parkingLot)
}

class ParkingBoy <<Application Service>> {
    string Search(ParkingLotSearcher searcher)
    Ticket Parking(Car car, ParkingLot availableParkingLot)
}

interface IParkingLotRepository <<Repository>> {
   {abstract} List<ParkingLot> GetParkingLots()
   {abstract} ParkingLot GetParkingLotByAddress(string address)
   {abstract} void UpdateParkingLot(ParkingLot parkingLot)
   ... 
}

class ParkingLotSearcher <<Domain Service>> {
    ParkingLot Search(List<ParkingLot> parkingLots)
}


ParkingBoy ..> IParkingLotRepository
ParkingBoy ..> ParkingLotSearcher

IParkingLotRepository "1" -- "*" ParkingLot : retrieve >

ParkingLot "1" o--> "*" Car
ParkingLot -- Ticket : create >

@enduml